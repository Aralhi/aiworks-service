on:
  push:
    branches: ['main']
  workflow_dispatch:

env:
  NODE_VERSION: '16.x' # set this to the node version to use
  REMOTE_WORKSPACE: './chatGPT'

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: SSH deploy
        # You may pin to the exact commit or the version.
        # uses: easingthemes/ssh-deploy@3884c8554ff45c0fd37d3f12a76288d06ce7a2ff
        uses: easingthemes/ssh-deploy@v4.1.8
        with:
          # Private key part of an SSH key pair
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          # Remote host
          REMOTE_HOST: ${{ secrets.TENCENT_CLOUD_HOST }}
          # Remote user
          REMOTE_USER: deploy
          # Remote port
          # REMOTE_PORT: # optional, default is 22
          # Source directory, path relative to `$GITHUB_WORKSPACE` root, eg: `dist/`
          SOURCE: .
          # Target directory
          TARGET: ${{ env.REMOTE_WORKSPACE }}
          # Arguments to pass to rsync
          # ARGS: # optional, default is -rlgoDzvc -i
          # An array of ssh arguments, they must be prefixed with -o and separated by a comma, for example: -o SomeArgument=no, -o SomeOtherArgument=5
          # SSH_CMD_ARGS: # optional, default is -o StrictHostKeyChecking=no
          # paths to exclude separated by `,`, ie: `/dist/, /node_modules/`
          EXCLUDE: /.git/,/node_modules/
          # Script to run on host machine before rsync
          # SCRIPT_BEFORE: # optional, default is
          # Script to run on host machine after rsync
          SCRIPT_AFTER: cd ${{ env.REMOTE_WORKSPACE }} && npm install && npm run build --if-present && pm2 start --name aiworks npm -- start
